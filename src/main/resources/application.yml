spring:
  profiles:
    active: local
  servlet:
    multipart:
      max-file-size: 10MB
cloud:
  aws:
    credentials:
      access-key: ${S3_ACCESS_KEY}
      secret-key: ${S3_SECRET_KEY}
    s3:
      bucket: ${S3_BUCKET}
      file-path: ${S3_FILEPATH}
    region:
      static: ${S3_REGION}
    stack:
      auto: false
jwt:
  secret: ${SECRET_KEY}
  access-expiration-time: ${ACCESS_EXPIRED_TIME}
  refresh-expiration-time: ${REFRESH_EXPIRED_TIME}
  refresh-valid-time: ${REFRESH_VALID_TIME}
---
spring:
  config:
    activate:
      on-profile: local

  data:
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}

  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: ${DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}

  jpa:
    open-in-view: false
    database-platform: org.hibernate.dialect.MySQL8Dialect
    hibernate:
      ddl-auto: create
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    properties:
      hibernate:
        show_sql: true
        format_sql: true
    defer-datasource-initialization: true
  sql:
    init:
      mode: always
---
spring:
  config:
    activate:
      on-profile: dev

  data:
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}

  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: ${DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}

  jpa:
    open-in-view: false
    database-platform: org.hibernate.dialect.MySQL8Dialect
    hibernate:
      ddl-auto: validate
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    properties:
      hibernate:
        show_sql: true
        format_sql: true
  sql:
    init:
      mode: never