plugins {
    id "org.asciidoctor.jvm.convert" version "3.3.2"
}

configurations {
    asciidoctorExtensions
    compileOnly {
        extendsFrom annotationProcessor
    }
}

ext {
    set('snippetsDir', file("build/generated-snippets"))
}

dependencies {

    implementation project(':core')
    implementation project(':support:logging')

    //web
    implementation 'org.springframework.boot:spring-boot-starter-web'

    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    //actuator
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    //chat gpt
    implementation 'com.theokanning.openai-gpt3-java:service:0.14.0'
    //jpa
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.2'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.2'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.2'

    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    testImplementation 'org.springframework.security:spring-security-test'

    asciidoctorExtensions 'org.springframework.restdocs:spring-restdocs-asciidoctor'

}


tasks.named('test') {
    outputs.dir snippetsDir
}

tasks.named('asciidoctor') {
    dependsOn test
    configurations 'asciidoctorExtensions'
    inputs.dir snippetsDir
    sources{
        include("**/*.adoc","**/common/*.adoc")
    }
    baseDirFollowsSourceFile()
}

task copyDocument(type: Copy) {
    dependsOn asciidoctor
    from file("build/docs/asciidoc")
    into file("src/main/resources/static/docs")
}

bootJar {
    dependsOn copyDocument
    from ("${asciidoctor.outputDir}") {
        into 'static/docs'
    }
}

build() {
    dependsOn bootJar
}